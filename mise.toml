# Project dependencies for Python Flink Jobs

# Docker Management
[tasks."docker:start"]
description = "Start all required Docker containers (Kafka, Python Flink, Postgres, Kafka UI)"
run = "docker compose -f docker/docker-compose.yml up -d"

[tasks."docker:stop"]
description = "Stop all Docker containers"
run = "docker compose -f docker/docker-compose.yml down"

[tasks."docker:ps"]
description = "Show status of all Docker containers"
run = "docker compose -f docker/docker-compose.yml ps"

[tasks."docker:logs"]
description = "Show logs of all Docker containers"
run = "docker compose -f docker/docker-compose.yml logs -f"


[tasks."build"]
description = "Build Python Flink Docker images"
run = "docker compose -f docker/docker-compose.yml build jobmanager taskmanager"

# Python Flink Jobs (Docker)
[tasks."run:word-count"]
description = "Run Python Word Count job that processes static text data and counts word occurrences"
run = "docker compose -f docker/docker-compose.yml exec -it jobmanager flink run -py /opt/flink/python-jobs/run_job.py word_count"

[tasks."run:customer-analytics"]
description = "Run Python Customer Analytics job that counts customers created per minute"
run = "docker compose -f docker/docker-compose.yml exec -it jobmanager flink run -py /opt/flink/python-jobs/run_job.py customer_analytics"

[tasks."run:customer-debezium"]
description = "Run Python Customer Debezium job that processes CDC events from PostgreSQL via Kafka"
run = "docker compose -f docker/docker-compose.yml exec -it jobmanager flink run -py /opt/flink/python-jobs/run_job.py customer_debezium"

# Job Management
[tasks."jobs:list"]
description = "List all currently running Python Flink jobs"
run = "docker compose -f docker/docker-compose.yml exec jobmanager flink list"

[tasks."jobs:cancel"]
description = "Cancel all currently running Python Flink jobs"
run = '''
docker compose -f docker/docker-compose.yml exec jobmanager sh -c "flink list -r | grep -Eo '[0-9a-f]{32}' | xargs -r -n1 flink cancel"
'''

# Monitoring & UI
[tasks."ui"]
description = "Open Python Flink Dashboard web interface in browser (port 8082)"
run = "start http://localhost:8081"

[tasks."ui:kafka"]
description = "Open Kafka UI web interface in browser (port 8080)"
run = "start http://localhost:8080"

[tasks."logs"]
description = "Display Python Flink TaskManager logs in follow mode"
run = "docker compose -f docker/docker-compose.yml logs taskmanager --follow"

[tasks."logs:jobmanager"]
description = "Display Python Flink JobManager logs in follow mode"
run = "docker compose -f docker/docker-compose.yml logs jobmanager --follow"

# Database & Connectors
[tasks."connectors:register"]
description = "Register Debezium Kafka Connectors for CDC data capture"
run = "cd app && lein run -m flinkfintechpoc.connectors/register-connectors!"

[tasks."postgres:connect"]
description = "Connect to PostgreSQL database (outbox_demo) using interactive psql client"
run = "docker compose -f docker/docker-compose.yml exec -it postgres psql -U postgres -d outbox_demo"

[tasks."simulate"]
description = "Simulate data generation for testing"
run = "cd app && lein run"

# Quick Start Workflow
